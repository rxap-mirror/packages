version: "3.7"
volumes:
  minio_data:
services:
  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    volumes:
      - ./docker/minio/data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.entrypoints=https"
      - "traefik.http.routers.minio-console.rule=Host(`minio.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.entrypoints=https"
      - "traefik.http.routers.minio.rule=Host(`storage.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.healthcheck.path=/minio/health/live"
      - "traefik.http.services.minio.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.minio.loadbalancer.healthcheck.timeout=10s"
  minio-mc:
    depends_on:
      - minio
    image: minio/mc
    entrypoint: >
      /bin/sh -c '
      sleep 2 &&
      echo set alias &&
      mc alias set minio http://minio:9000 minioadmin minioadmin &&
      echo create bucket &&
      mc mb --ignore-existing minio/development &&
      echo create demo file &&
      echo It works! > demo.txt &&
      echo copy demo file &&
      mc cp ./demo.txt minio/development/ &&
      exit 0;
      '
