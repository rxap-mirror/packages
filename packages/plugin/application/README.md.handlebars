# {{packageJson.name}}
{{#if packageJson.description ~}}
> {{packageJson.description}}
{{/if}}

[![npm version](https://img.shields.io/npm/v/{{packageJson.name}}?style=flat-square)](https://www.npmjs.com/package/{{packageJson.name}})
[![commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?style=flat-square)](https://commitizen.github.io/cz-cli/)
[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
![Libraries.io dependency status for latest release, scoped npm package](https://img.shields.io/librariesio/release/npm/{{packageJson.name}})
![npm](https://img.shields.io/npm/dm/{{packageJson.name}})
![NPM](https://img.shields.io/npm/l/{{packageJson.name}})

- [Installation](#installation)
{{#if getStartedContent ~}}
- [Get started](#get-started)
{{/if}}
{{#if guidesContent ~}}
- [Guides](#guides)
{{/if}}
{{#if hasGenerators ~}}
- [Generators](#generators)
{{/if}}
{{#if hasExecutors ~}}
- [Executors](#executors)
{{/if}}

# Installation

**Add the package to your workspace:**
```bash
yarn add {{packageJson.name}}
```
{{#if hasPeerDependencies ~}}

**Install peer dependencies:**
```bash
yarn add {{#each rxapDependencies}} {{this.name}}@{{this.version}}{{/each}}
```
{{/if}}
{{#if hasInitGenerator ~}}

**Execute the init generator:**
```bash
yarn nx g {{packageJson.name}}:init
```
{{/if}}
{{#if hasConfigGenerator ~}}

**Execute the config generator to use the package with a project:**
```bash
yarn nx g {{packageJson.name}}:config [project]
```
{{/if}}
{{#if getStartedContent ~}}

# Get started

{{{getStartedContent}}}
{{/if}}
{{#if guidesContent ~}}

# Guides

{{{guidesContent}}}
{{/if}}
{{#if hasGenerators ~}}

# Generators
{{#each generatorList}}

## {{this.name}}
> {{this.description}}

```bash
yarn nx g {{@root.packageJson.name}}:{{this.name}}
```
{{#hasProperties this.schema.properties}}

Option | Type | Default | Description
--- | --- | --- | ---
{{#each this.schema.properties}}
{{@key}} | {{this.type}} | {{this.default}} | {{this.description}}
{{/each}}
{{/hasProperties}}
{{/each}}
{{/if}}
{{#if hasExecutors ~}}

# Executors
{{#each executorsList}}

## {{this.name}}
> {{this.description}}

**project.json**
```json
{
  "targets": {
    "{{this.name}}": {
      "executor": "{{@root.packageJson.name}}:{{this.name}}"
    }
  }
}
```
{{#hasProperties this.schema.properties}}

Option | Type | Default | Description
--- | --- | --- | ---
{{#each this.schema.properties}}
{{@key}} | {{this.type}} | {{this.default}} | {{this.description}}
{{/each}}
{{/hasProperties}}
{{/each}}

{{/if}}
