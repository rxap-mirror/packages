import { Directive, Inject, Injector, INJECTOR, NgModule } from '@angular/core';
import { OpenFormWindowMethodDirective } from '@rxap/form-window-system';
import { <%= classify(name) %>FormComponent } from './<%= name %>-form.component';
import { I<%= classify(name) %>Form } from './<%= name %>.form';
import { Open<%= classify(name) %>FormWindowMethod } from './open-<%= name %>-form-window.method';

@Directive({
  selector: '[eurogardOpen<%= classify(name) %>FormWindow]',
  standalone: true
})
export class Open<%= classify(name) %>FormWindowMethodDirective extends OpenFormWindowMethodDirective<I<%= classify(name) %>Form,
  Partial<I<%= classify(name) %>Form>> {
  constructor(public readonly method: Open<%= classify(name) %>FormWindowMethod,
              @Inject(INJECTOR) injector: Injector,
  ) {
    super(injector);
  }
}

@NgModule({
  imports: [
    <%= classify(name) %>FormComponent,
    Open<%= classify(name) %>FormWindowMethodDirective
  ],
  exports: [ Open<%= classify(name) %>FormWindowMethodDirective ],
  providers: [ Open<%= classify(name) %>FormWindowMethod ],
})
export class Open<%= classify(name) %>FormWindowMethodDirectiveModule {
}
