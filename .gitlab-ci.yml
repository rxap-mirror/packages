image: registry.gitlab.com/digitaix/gitlab-ci/helpers/bash-utilities

stages:
#- lint
- build
- test
- publish

#lint:master:
#  stage: lint
#  before_script:
#  - yarn
#  script:
#  - ./lint-for-master.sh
#  parallel: 4
#  allow_failure: true
#  only:
#  - master

#lint:
#  stage: lint
#  before_script:
#  - yarn
#  script:
#  - yarn affected:lint --base=remotes/origin/${CI_COMMIT_REF_NAME} --head=${CI_COMMIT_SHA} --parallel true --maxParallel 17
#  allow_failure: true
#  except:
#  - master

#madge:
#  stage: lint
#  before_script:
#  - rm yarn.lock package.json
#  - yarn add madge
#  script:
#  - ./madge.sh
#  allow_failure: true
#  parallel: 4

#compodoc:
#  stage: lint
#  before_script:
#  - rm yarn.lock package.json
#  - yarn add @compodoc/compodoc
#  script:
#  - yarn compodoc
#  artifacts:
#    name: "$CI_JOB_NAME compodoc"
#    paths:
#    - compodoc

build:
  stage: build
  before_script:
  - yarn
  script:
  - yarn affected:build --parallel true --maxParallel 3
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
    - dist
  except:
  - master

build:master:
  stage: build
  before_script:
  - yarn
  script:
  - yarn affected:build --parallel true --maxParallel 3
  artifacts:
    name: "$CI_JOB_NAME build"
    paths:
    - dist
  only:
  - master

build:playground:form-controls:
  stage: build
  before_script:
  - yarn
  script:
  - yarn build form-controls-playground
  artifacts:
    name: "$CI_JOB_NAME build form-controls playground"
    paths:
    - dist/apps/form-controls-playground
  only:
  - master

#test:playground:
#  stage: test
#  image: registry.gitlab.com/digitaix/gitlab-ci/helpers/chrome-headless
#  before_script:
#  - yarn
#  script:
#  - yarn playground:ci
#  artifacts:
#    name: "$CI_JOB_NAME test playground"
#    paths:
#    - sandbox.report.json
#  only:
#  - master

test:
  stage: test
  before_script:
  - yarn
  variables:
    COLLECT_COVERAGE: "true"
  script:
  - yarn affected:test --parallel true --maxParallel 3
  dependencies:
  - build
  artifacts:
    name: "$CI_JOB_NAME coverage"
    paths:
    - coverage
  except:
  - master

test:master:
  stage: test
  before_script:
  - yarn
  script:
  - yarn affected:test --parallel true --maxParallel 3
  variables:
    COLLECT_COVERAGE: "true"
  dependencies:
  - build:master
  artifacts:
    name: "$CI_JOB_NAME coverage"
    paths:
    - coverage
  only:
  - master

pages:
  stage: publish
  needs:
  - test:master
  #  - compodoc
  script:
  - mkdir public
  #  - cp -r compodoc public/
  - cp -r coverage public/
  #  - cp sandbox.report.json public/
  #  - cp -r dist/apps/playground public/
  artifacts:
    paths:
    - public
  only:
  - master
  dependencies:
  - test:master
#  - compodoc
#  - test:playground
#  - build:playground

publish:test:
  stage: publish
  needs:
  - test:master
  coverage: '/Total project code coverage: (\d*\.\d+\s\%)/'
  script:
  - ./get-coverage.sh
  only:
  - master
  dependencies:
  - test:master

publish:
  needs:
  - build:master
  stage: publish
  before_script:
  - echo -e "\n//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ./.npmrc
  script:
  - ./publish.sh
  dependencies:
  - build:master
  only:
  - master
